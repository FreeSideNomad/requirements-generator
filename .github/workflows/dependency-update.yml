name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-python-dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install

    - name: Update Python dependencies
      run: |
        # Update all dependencies
        uv lock --upgrade

        # Check if there are changes
        if git diff --quiet uv.lock; then
          echo "No dependency updates available"
          echo "has_updates=false" >> $GITHUB_ENV
        else
          echo "Dependencies updated"
          echo "has_updates=true" >> $GITHUB_ENV
        fi

    - name: Install updated dependencies
      if: env.has_updates == 'true'
      run: uv sync --all-extras --dev

    - name: Run tests with updated dependencies
      if: env.has_updates == 'true'
      env:
        DATABASE_URL: sqlite+aiosqlite:///./test.db
        SECRET_KEY: test-secret-key-for-testing-only
        MOCK_OPENAI: true
      run: |
        uv run pytest tests/ -v

    - name: Create Pull Request
      if: env.has_updates == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: 'chore: Update Python dependencies'
        body: |
          ## Automated Dependency Update

          This PR updates Python dependencies to their latest versions.

          ### Changes
          - Updated `uv.lock` with latest dependency versions
          - All tests pass with updated dependencies

          ### Review Notes
          - Please review the changes carefully
          - Run additional tests if needed
          - Check for any breaking changes in release notes

          **Auto-generated by dependency-update workflow**
        branch: dependency-updates/python
        delete-branch: true

  update-node-dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Update Node dependencies
      run: |
        # Update package-lock.json
        npm update

        # Check if there are changes
        if git diff --quiet package-lock.json; then
          echo "No Node dependency updates available"
          echo "has_updates=false" >> $GITHUB_ENV
        else
          echo "Node dependencies updated"
          echo "has_updates=true" >> $GITHUB_ENV
        fi

    - name: Test CSS build
      if: env.has_updates == 'true'
      run: |
        npm run build-css
        npm run lint

    - name: Install Python dependencies for E2E tests
      if: env.has_updates == 'true'
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH="$HOME/.local/bin:$PATH"
        uv python install
        uv sync --all-extras --dev

    - name: Run E2E tests
      if: env.has_updates == 'true'
      env:
        DATABASE_URL: sqlite+aiosqlite:///./test.db
        SECRET_KEY: test-secret-key-for-testing-only
        MOCK_OPENAI: true
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        npx playwright install --with-deps
        npx playwright test --reporter=github

    - name: Create Pull Request
      if: env.has_updates == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Node.js dependencies'
        title: 'chore: Update Node.js dependencies'
        body: |
          ## Automated Node.js Dependency Update

          This PR updates Node.js dependencies to their latest versions.

          ### Changes
          - Updated `package-lock.json` with latest dependency versions
          - CSS build and linting pass
          - E2E tests pass with updated dependencies

          ### Review Notes
          - Please review the changes carefully
          - Check for any breaking changes in release notes
          - Test the UI to ensure no visual regressions

          **Auto-generated by dependency-update workflow**
        branch: dependency-updates/nodejs
        delete-branch: true

  security-audit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true

    - name: Set up Python
      run: uv python install

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Node dependencies
      run: npm ci

    - name: Python security audit
      run: |
        uv run safety check --json --output python-security.json || true
        uv run bandit -r src/ -f json -o bandit-security.json || true

    - name: Node security audit
      run: |
        npm audit --audit-level=moderate --json > node-security.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-reports
        path: |
          python-security.json
          bandit-security.json
          node-security.json
        retention-days: 90