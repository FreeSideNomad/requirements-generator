"""Initial database schema

Revision ID: 4537f5e8b292
Revises: 
Create Date: 2025-09-19 22:12:38.205226

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4537f5e8b292'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('subdomain', sa.String(length=63), nullable=False),
    sa.Column('custom_domain', sa.String(length=255), nullable=True),
    sa.Column('industry', sa.String(length=50), nullable=False),
    sa.Column('template_config', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('subscription_tier', sa.String(length=20), nullable=False),
    sa.Column('max_users', sa.Integer(), nullable=True),
    sa.Column('max_projects', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('trial_ends_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('suspended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('technical_contact', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tenants')),
    sa.UniqueConstraint('custom_domain', name=op.f('uq_tenants_custom_domain')),
    sa.UniqueConstraint('subdomain', name=op.f('uq_tenants_subdomain'))
    )
    op.create_table('tenant_features',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('feature_name', sa.String(length=100), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('usage_limit', sa.Integer(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_tenant_features_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tenant_features')),
    sa.UniqueConstraint('tenant_id', 'feature_name', name='uq_tenant_feature')
    )
    op.create_table('tenant_invitations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('tenant_name', sa.String(length=255), nullable=False),
    sa.Column('subdomain', sa.String(length=63), nullable=False),
    sa.Column('industry', sa.String(length=50), nullable=False),
    sa.Column('subscription_tier', sa.String(length=20), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('is_expired', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_tenant_invitations_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tenant_invitations')),
    sa.UniqueConstraint('token', name=op.f('uq_tenant_invitations_token'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('auth_provider', sa.String(length=20), nullable=False),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('locale', sa.String(length=10), nullable=False),
    sa.Column('preferences', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_users_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('tenant_id', 'external_id', name='uq_tenant_external_id'),
    sa.UniqueConstraint('tenant_id', 'username', name='uq_tenant_username')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=100), nullable=True),
    sa.Column('resource_id', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_metadata', sa.JSON(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_audit_logs_tenant_id_tenants')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('key', sa.String(length=20), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('project_type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.String(length=100), nullable=True),
    sa.Column('template_config', sa.JSON(), nullable=False),
    sa.Column('objectives', sa.JSON(), nullable=False),
    sa.Column('success_criteria', sa.JSON(), nullable=False),
    sa.Column('assumptions', sa.JSON(), nullable=False),
    sa.Column('constraints', sa.JSON(), nullable=False),
    sa.Column('business_value', sa.Text(), nullable=True),
    sa.Column('target_audience', sa.Text(), nullable=True),
    sa.Column('estimated_effort', sa.String(length=50), nullable=True),
    sa.Column('completion_percentage', sa.Integer(), nullable=False),
    sa.Column('requirements_count', sa.Integer(), nullable=False),
    sa.Column('approved_requirements_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('target_completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('actual_completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name=op.f('fk_projects_owner_id_users')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_projects_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    op.create_table('user_invitations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('invited_by_id', sa.UUID(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('is_expired', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['invited_by_id'], ['users.id'], name=op.f('fk_user_invitations_invited_by_id_users')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_user_invitations_tenant_id_tenants')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_invitations_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_invitations')),
    sa.UniqueConstraint('token', name=op.f('uq_user_invitations_token'))
    )
    op.create_table('user_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('terminated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_sessions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_sessions')),
    sa.UniqueConstraint('refresh_token', name=op.f('uq_user_sessions_refresh_token')),
    sa.UniqueConstraint('session_token', name=op.f('uq_user_sessions_session_token'))
    )
    op.create_table('project_members',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_project_members_project_id_projects')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_project_members_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_project_members'))
    )
    op.create_table('requirements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('key', sa.String(length=20), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('requirement_type', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('acceptance_criteria', sa.JSON(), nullable=False),
    sa.Column('business_rules', sa.JSON(), nullable=False),
    sa.Column('assumptions', sa.JSON(), nullable=False),
    sa.Column('dependencies', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('assigned_to_id', sa.UUID(), nullable=True),
    sa.Column('ai_generated', sa.Boolean(), nullable=False),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('ai_suggestions', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], name=op.f('fk_requirements_assigned_to_id_users')),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_requirements_author_id_users')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_requirements_project_id_projects')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_requirements'))
    )
    op.create_table('requirement_comments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('requirement_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('comment_type', sa.String(length=20), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('fk_requirement_comments_author_id_users')),
    sa.ForeignKeyConstraint(['parent_id'], ['requirement_comments.id'], name=op.f('fk_requirement_comments_parent_id_requirement_comments')),
    sa.ForeignKeyConstraint(['requirement_id'], ['requirements.id'], name=op.f('fk_requirement_comments_requirement_id_requirements')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_requirement_comments'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('requirement_comments')
    op.drop_table('requirements')
    op.drop_table('project_members')
    op.drop_table('user_sessions')
    op.drop_table('user_invitations')
    op.drop_table('projects')
    op.drop_table('audit_logs')
    op.drop_table('users')
    op.drop_table('tenant_invitations')
    op.drop_table('tenant_features')
    op.drop_table('tenants')
    # ### end Alembic commands ###
